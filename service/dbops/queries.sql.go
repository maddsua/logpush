// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: queries.sql

package dbops

import (
	"context"
	"time"

	"github.com/google/uuid"
)

const getStream = `-- name: GetStream :one
select id, created_at, name, labels from streams where id = $1
`

func (q *Queries) GetStream(ctx context.Context, id uuid.UUID) (Stream, error) {
	row := q.db.QueryRowContext(ctx, getStream, id)
	var i Stream
	err := row.Scan(
		&i.ID,
		&i.CreatedAt,
		&i.Name,
		&i.Labels,
	)
	return i, err
}

const insertStreamEntry = `-- name: InsertStreamEntry :exec
insert into stream_entries (
	stream_id,
	tx_id,
	created_at,
	level,
	message,
	metadata
) values (
	$1,
	$2,
	$3,
	$4,
	$5,
	$6
)
`

type InsertStreamEntryParams struct {
	StreamID  uuid.UUID
	TxID      uuid.NullUUID
	CreatedAt time.Time
	Level     string
	Message   string
	Metadata  []byte
}

func (q *Queries) InsertStreamEntry(ctx context.Context, arg InsertStreamEntryParams) error {
	_, err := q.db.ExecContext(ctx, insertStreamEntry,
		arg.StreamID,
		arg.TxID,
		arg.CreatedAt,
		arg.Level,
		arg.Message,
		arg.Metadata,
	)
	return err
}
